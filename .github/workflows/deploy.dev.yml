name: Deploy-to-dev
on:
  workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev-gcp:personbruker
    steps:
      - uses: actions/checkout@v1
      - name: Define build environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          IMAGE_VERSION_RAW=$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})
          echo "CI=true" >> $GITHUB_ENV
          echo "IMAGE_REGISTRY=docker.pkg.github.com/$(echo ${GITHUB_REPOSITORY})" >> $GITHUB_ENV
          echo "IMAGE_NAME=$(echo ${GITHUB_REPOSITORY##*/})" >> $GITHUB_ENV
          echo "IMAGE_VERSION=${IMAGE_VERSION_RAW,,}" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=$(echo ${GITHUB_TOKEN})" >> $GITHUB_ENV
      - name: Define app environmment
        run: |
          cat > .env <<EOF
          ENV=dev
          APP_ORIGIN=https://finnkontor.dev.nav.no
          APP_BASEPATH=/person/finnkontor
          API_ORIGIN=https://nav-office-search-api.dev-fss-pub.nais.io
          API_CLIENT_ID=3399e573-0d83-4581-8db9-7b66c8f5f775
          DECORATOR_FALLBACK_URL=https://dekoratoren.dev.nav.no
          XP_OFFICE_INFO_API=/_/service/no.nav.navno/officeInfo
          XP_ORIGIN=https://www.dev.nav.no
          EOF
      - name: NPM cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Nextjs cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
      - run: npm run build
      - name: Docker build and push
        run: |
          echo $GITHUB_TOKEN | docker login $IMAGE_REGISTRY -u ${GITHUB_REPOSITORY} --password-stdin
          docker build -t $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION .
          docker push $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_VERSION
      - name: Generate nais variables
        run: |
          cat > .nais/vars.yaml <<EOF
          namespace: personbruker
          image: $IMAGE_REGISTRY/$IMAGE_NAME
          version: $IMAGE_VERSION
          EOF
      - uses: nais/deploy/actions/deploy@master
        env:
          CLUSTER: dev-gcp
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: .nais/config.dev.yaml
          VARS: .nais/vars.yaml
